/* Fonts ---------------------------- */

@font-face {
  font-family: 'Source Code Pro';
  font-style: normal;
  font-weight: 400;
  src: local('Source Code Pro'), local('SourceCodePro'), url(fonts/SourceCodePro-Regular.ttf) format('truetype');
}

@font-face {
  font-family: customFont;
  src: url(../BankGothic.ttf);
  /* src: url(assets/Sango.otf); */
}


/* Global ---------------------------- */

* {
  box-sizing: border-box;
}

html {
  height: 100%;
  font-family: 'BlinkMacSystemFont', 'Lucida Grande', 'Segoe UI', Ubuntu, Cantarell, sans-serif;
  font-size: 14px;
  line-height: 1.5;
  overflow: hidden; /* Prevents rubber-band scrolling of the whole "page" */
  color: var(--color);
  background-color: #1e1d27; /* To cover OSes with no default background color */
}

body {
  margin: 0;
  height: 100%;
  display: flex;
}

a {
  color: var(--color-link);
}

h1,
h2,
h3 {
  margin-top: 0;
  line-height: 1.5;
}

h1 {
  font-size: 1.5em;
  font-weight: 600;
}

h2 {
  font-size: 1.3em;
  font-weight: normal;
}

h3 {
  font-size: 1.12em;
  font-weight: 600;
}

table {
  width: 100%;
  border-spacing: 0;
  border: 1px solid hsla(0,0%,0%,.08);
  border-width: 0 1px 1px 0;
}
th {
  background-color: hsla(0,0%,50%,.06);
}
th,
td {
  text-align: center;
  border: 1px solid hsla(0,0%,0%,.08);
  border-width: 1px 0 0 1px;
}

svg {
  fill: currentColor;
}

/* Code */

code, kbd {
  font-family: 'Source Code Pro', monospace;
  border-radius: 4px;
  padding: 1px 4px;
  white-space: nowrap;
  color: hsl(0,0%,36%);
  background-color: hsla(0,0%,60%,.15);
}

pre, kbd {
  font-size: 13px;
  overflow: auto;
  padding: 1em;
  margin: 0;
  border-radius: 4px;
  border: 1px solid;
  border-color: var(--color-border);
  background-color: white;
}

pre code {
  white-space: pre;
}

pre > .hljs {
  color: var(--color-subtle);
  background-color: white;
}

kbd {
  padding: 0.5em;
}


/* Utilities ---------------------------- */

.u-avoid-clicks {
  pointer-events: none;
}

/* Visually hidden, but will be read by screen readers */
.u-visible-to-screen-reader {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  border: 0;
}

.no-display {
  display: none;
}


/* Content ------------------ */

.content {
  flex: 1;
  position: relative;
  overflow: hidden;
  visibility: hidden;
  opacity: 0;
}
.content.is-shown {
  visibility: visible;;
  opacity: 1;
}


/* Hacks ---------------------------- */

/* Fixes horizontal scrolling in code blocks on OS X El Cap (10.11.3), retina screen
 *
 * By adding an invisible outline property, it will force a repaint
 * which enables the scrolling.
 */

.hljs:hover,
.hljs:active {
  outline: 1px solid transparent;
}


.glitch {
  color: white;
  /* Animation provies a slight random skew. Check bottom of doc
  for more information on how to random skew. */
  animation: glitch-skew 20s infinite linear alternate-reverse;
}
.glitch::before {
  content: attr(data-text);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  left: 2px;
  text-shadow: -2px 0 #ff00c1;
  /* Creates an initial clip for our glitch. This works in
  a typical top,right,bottom,left fashion and creates a mask
  to only show a certain part of the glitch at a time. */
  clip: rect(44px, 450px, 56px, 0);
  /* Runs our glitch-anim defined below to run in a 5s loop, infinitely,
  with an alternating animation to keep things fresh. */
  animation: glitch-anim 20s infinite linear alternate-reverse;
}
.glitch::after {
  content: attr(data-text);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  left: -2px; 
  text-shadow: -2px 0 #00fff9, 2px 2px #ff00c1;
  animation: glitch-anim2 10s infinite linear alternate-reverse;
}

/* Creates an animation with 20 steaps. For each step, it calculates 
a percentage for the specific step. It then generates a random clip
box to be used for the random glitch effect. Also adds a very subtle
skew to change the 'thickness' of the glitch.*/
@keyframes glitch-anim {
  0% {
    clip: rect(30px, 9999px, 22px, 0);
    transform: skew(0.96deg);
  }
  5% {
    clip: rect(41px, 9999px, 37px, 0);
    transform: skew(0.94deg);
  }
  10% {
    clip: rect(62px, 9999px, 29px, 0);
    transform: skew(0.79deg);
  }
  15% {
    clip: rect(21px, 9999px, 52px, 0);
    transform: skew(0.63deg);
  }
  20% {
    clip: rect(28px, 9999px, 78px, 0);
    transform: skew(0.46deg);
  }
  25% {
    clip: rect(65px, 9999px, 84px, 0);
    transform: skew(0.84deg);
  }
  30% {
    clip: rect(74px, 9999px, 40px, 0);
    transform: skew(0.62deg);
  }
  35% {
    clip: rect(43px, 9999px, 65px, 0);
    transform: skew(0.57deg);
  }
  40% {
    clip: rect(70px, 9999px, 35px, 0);
    transform: skew(0.01deg);
  }
  45% {
    clip: rect(81px, 9999px, 83px, 0);
    transform: skew(0.05deg);
  }
  50% {
    clip: rect(41px, 9999px, 50px, 0);
    transform: skew(0.01deg);
  }
  55% {
    clip: rect(88px, 9999px, 60px, 0);
    transform: skew(0.21deg);
  }
  60% {
    clip: rect(10px, 9999px, 61px, 0);
    transform: skew(0.43deg);
  }
  65% {
    clip: rect(12px, 9999px, 29px, 0);
    transform: skew(0.06deg);
  }
  70% {
    clip: rect(63px, 9999px, 48px, 0);
    transform: skew(0.71deg);
  }
  75% {
    clip: rect(95px, 9999px, 73px, 0);
    transform: skew(0.06deg);
  }
  80% {
    clip: rect(88px, 9999px, 39px, 0);
    transform: skew(0.04deg);
  }
  85% {
    clip: rect(61px, 9999px, 24px, 0);
    transform: skew(0.56deg);
  }
  90% {
    clip: rect(21px, 9999px, 86px, 0);
    transform: skew(0.39deg);
  }
  95% {
    clip: rect(16px, 9999px, 33px, 0);
    transform: skew(0.37deg);
  }
  100% {
    clip: rect(13px, 9999px, 68px, 0);
    transform: skew(0.94deg);
  }
}
@keyframes glitch-anim2 {
  0% {
    clip: rect(45px, 9999px, 42px, 0);
    transform: skew(0.7deg);
  }
  5% {
    clip: rect(37px, 9999px, 23px, 0);
    transform: skew(0.48deg);
  }
  10% {
    clip: rect(11px, 9999px, 31px, 0);
    transform: skew(0.54deg);
  }
  15% {
    clip: rect(7px, 9999px, 20px, 0);
    transform: skew(0.54deg);
  }
  20% {
    clip: rect(59px, 9999px, 73px, 0);
    transform: skew(0.47deg);
  }
  25% {
    clip: rect(28px, 9999px, 16px, 0);
    transform: skew(0.59deg);
  }
  30% {
    clip: rect(83px, 9999px, 96px, 0);
    transform: skew(0.4deg);
  }
  35% {
    clip: rect(73px, 9999px, 35px, 0);
    transform: skew(0.07deg);
  }
  40% {
    clip: rect(2px, 9999px, 59px, 0);
    transform: skew(0.2deg);
  }
  45% {
    clip: rect(63px, 9999px, 87px, 0);
    transform: skew(0.99deg);
  }
  50% {
    clip: rect(41px, 9999px, 78px, 0);
    transform: skew(0.2deg);
  }
  55% {
    clip: rect(50px, 9999px, 16px, 0);
    transform: skew(0.82deg);
  }
  60% {
    clip: rect(3px, 9999px, 46px, 0);
    transform: skew(0.41deg);
  }
  65% {
    clip: rect(50px, 9999px, 94px, 0);
    transform: skew(0.02deg);
  }
  70% {
    clip: rect(39px, 9999px, 67px, 0);
    transform: skew(0.44deg);
  }
  75% {
    clip: rect(33px, 9999px, 19px, 0);
    transform: skew(0.26deg);
  }
  80% {
    clip: rect(9px, 9999px, 67px, 0);
    transform: skew(0.31deg);
  }
  85% {
    clip: rect(32px, 9999px, 94px, 0);
    transform: skew(0.65deg);
  }
  90% {
    clip: rect(66px, 9999px, 34px, 0);
    transform: skew(0.27deg);
  }
  95% {
    clip: rect(25px, 9999px, 71px, 0);
    transform: skew(0.8deg);
  }
  100% {
    clip: rect(63px, 9999px, 78px, 0);
    transform: skew(0.17deg);
  }
}
@keyframes glitch-skew {
  0% {
    transform: skew(4deg);
  }
  10% {
    transform: skew(2deg);
  }
  20% {
    transform: skew(-4deg);
  }
  30% {
    transform: skew(3deg);
  }
  40% {
    transform: skew(3deg);
  }
  50% {
    transform: skew(1deg);
  }
  60% {
    transform: skew(-4deg);
  }
  70% {
    transform: skew(0deg);
  }
  80% {
    transform: skew(0deg);
  }
  90% {
    transform: skew(0deg);
  }
  100% {
    transform: skew(4deg);
  }
}

